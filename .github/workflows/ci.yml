# Continuos Integration workflow
name: 🔄 CI

# Controls when the workflow will run
on:
  pull_request: 
    paths: 
      - .github/workflows/ci.yml
      - backend/**/*
      - frontend/**/*
      - package.json
      - tsconfig.json

  push:
    branches: ['main']
    paths: 
      - .github/workflows/ci.yml
      - backend/**/*
      - frontend/**/*
      - package.json
      - tsconfig.json

  # Can be triggered by other workflows
  workflow_call:
    inputs:
      latest_deps:
        type: boolean
        default: false
        description: Whether the latest dependencies should be used
      latest_parser:
        type: boolean
        default: false
        description: Whether the latest parser available should be used
  
  # Allow manual trigger
  workflow_dispatch:

# Jobs
jobs:

  sanitize:
    name: "🧹 Sanitize"
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🛠️ NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 🔧 Install latest dependencies
        if: ${{ always() && contains(inputs.latest_deps, 'true') }}
        shell: bash
        run: |
          npm ci
          cd backend
          ../scripts/force_update.sh
          cd ../frontend
          ../scripts/force_update.sh

      - name: 🔧 Install latest parser
        if: ${{ always() && !contains(inputs.latest_deps, 'true') && contains(inputs.latest_parser, 'true') }}
        shell: bash
        run: |
          npm ci
          cd backend
          npm i parser-de-notas-de-corretagem@latest
          cd ../frontend
          npm i -D parser-de-notas-de-corretagem@latest

      - name: 🔧 Install dependencies
        if: ${{ always() && !contains(inputs.latest_deps, 'true') && !contains(inputs.latest_parser, 'true') }}
        shell: bash
        run:  |
          npm ci

      - name: 🧹 Run linters
        shell: bash
        run:  npm run lint

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        force_update_script: [../scripts/force_update.sh, ../scripts/force_update.ps1, ../scripts/force_update.sh]
    name: "🧪 Test (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🛠️ NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 🔧 Install latest dependencies
        if: ${{ always() && contains(inputs.latest_deps, 'true') }}
        run: |
          npm ci
          cd backend
          ${{ matrix.force_update_script }}
          cd ../frontend
          ${{ matrix.force_update_script }}

      - name: 🔧 Install latest parser
        if: ${{ always() && !contains(inputs.latest_deps, 'true') && contains(inputs.latest_parser, 'true') }}
        run: |
          npm ci
          cd backend
          npm i parser-de-notas-de-corretagem@latest
          cd ../frontend
          npm i -D parser-de-notas-de-corretagem@latest

      - name: 🔧 Install dependencies
        if: ${{ always() && !contains(inputs.latest_deps, 'true') && !contains(inputs.latest_parser, 'true') }}
        run:  |
          npm ci

      - name: 🧪 Run test
        run:  npm run test

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        force_update_script: [../scripts/force_update.sh, ../scripts/force_update.ps1, ../scripts/force_update.sh]
    name: "📦 Build (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🛠️ NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 🔧 Install latest dependencies
        if: ${{ always() && contains(inputs.latest_deps, 'true') }}
        run: |
          npm ci
          cd backend
          ${{ matrix.force_update_script }}
          cd ../frontend
          ${{ matrix.force_update_script }}

      - name: 🔧 Install latest parser
        if: ${{ always() && !contains(inputs.latest_deps, 'true') && contains(inputs.latest_parser, 'true') }}
        run: |
          npm ci
          cd backend
          npm i parser-de-notas-de-corretagem@latest
          cd ../frontend
          npm i -D parser-de-notas-de-corretagem@latest

      - name: 🔧 Install dependencies
        if: ${{ always() && !contains(inputs.latest_deps, 'true') && !contains(inputs.latest_parser, 'true') }}
        run:  |
          npm ci

      - name: 📦 Run build
        run:  npm run build

# EOF
