name: 🎁 Create release

defaults:
  run:
    shell: bash

on: 
  workflow_call:
    inputs:
      release_version:
        type: string
        description: 'Release version formatted as "vMM.mm.pp"'
        required: true

  workflow_dispatch:
    inputs:
      release_version:
        type: string
        description: 'Release version formatted as "vMM.mm.pp"'
        required: true

jobs:
  calculate-release-version:
    name: 🧮 Calculate release version
    runs-on: ubuntu-22.04
    outputs:
      release_version: ${{ steps.result.outputs.release_version }}
    steps:
      - name: 🧮 Calculate version
        shell: bash
        id: result
        run: |
          release_version=${{ inputs.release_version }}
          if [[ -n "${release_version}" ]] && [[ "${release_version}" =~ v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+ ]]; then
            echo "release_version=${release_version}" >> $GITHUB_OUTPUT;
            echo "[INFO] Release version: ${release_version}"
          else
            echo "[ERROR] release_version '${release_version}' is invalid"
            exit 1
          fi

  create-release:
    name: 🎁 Create release
    runs-on: ubuntu-22.04
    needs: calculate-release-version
    permissions:
      contents: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.calculate-release-version.outputs.release_version }}

      - name: 📰 Generate RELEASE.md
        run: |
          # Generate a RELEASE.md with only the first section of the CHANGELOG.md
          line=$(cat CHANGELOG.md | grep -n -m 2 "## \[" | tail -n 1 | sed -r 's/([[:digit:]]*):.*/\1/g')
          head -n $((line - 1)) CHANGELOG.md > RELEASE.md
          echo "See the full [CHANGELOG.md](https://github.com/planetsLightningArrester/leitor-de-notas-de-corretagem/blob/main/CHANGELOG.md)" >> RELEASE.md

      - name: 🚀 Publish release
        id: create_release
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ needs.calculate-release-version.outputs.release_version }}
          bodyFile: ./RELEASE.md

  upload-artifacts:
    name: 📦 Upload artifacts
    needs: [create-release, calculate-release-version]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.calculate-release-version.outputs.release_version }}

      - name: 🛠️ NodeJS setup
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 🔧 Install dependencies
        run:  npm ci

      - name: 📦 Run build
        run:  npm run build

      - name: ⬆️ Upload artifacts
        id: create_release
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ needs.calculate-release-version.outputs.release_version }}
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: "dist/make/zip/**/*.zip"

# EOF